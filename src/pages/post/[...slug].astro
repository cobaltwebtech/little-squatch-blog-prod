---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "@/layouts/BlogPost";
import Code from "@/components/mdx/Code";
import ListRelatedPosts from "@/components/ListRelatedPosts";
import TableOfContents from "@/components/TableOfContents";
import { getPosts } from "@/utils";
import SButton from "@/components/mdx/SButton";
import Disqus from "@/components/Disqus";
import { disqusConfig } from "@/data/disqus.config";

const posts = await getCollection("blog");
export async function getStaticPaths() {
  const posts = await getPosts();

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<"blog">;

const post = Astro.props;

const MAX_POSTS = 3;
const getRelatedPosts = (post: Props) => {
  const lowercaseTags = post.data.tags.map((tag) => tag.toLowerCase());
  const relatedPosts = posts.filter(
    (p) =>
      p.slug !== post.slug &&
      p.data.tags.some((t) => lowercaseTags.includes(t.toLowerCase())),
  );
  return relatedPosts.slice(0, MAX_POSTS);
};

const relatedPosts = getRelatedPosts(post);

const { Content, headings, remarkPluginFrontmatter } = await post.render();

const disqusEnabled = disqusConfig.enabled;
---

<BlogPost
  id={post.id}
  data={post.data}
  headings={headings}
  readTime={remarkPluginFrontmatter.minutesRead}
>
  <div class="mt-8 grid grid-cols-1 gap-10 md:grid-cols-[auto_15%]">
    <!-- post -->
    <article class="w-full max-w-full">
      <div class="prose prose-slate dark:prose-invert mb-12 min-w-full">
        <Content components={{ pre: Code, SButton }} />
      </div>

      <!-- related posts -->
      <footer>
        <h2 class="mb-6 text-lg font-bold dark:text-white">Related Posts</h2>
        <ListRelatedPosts posts={relatedPosts} />
      </footer>
    </article>
    <!-- aside  -->
    <aside class="hidden flex-col gap-8 md:flex">
      <div
        class="sticky top-32 hidden self-start transition-all duration-200 md:block"
      >
        {headings && headings.length > 0 && <TableOfContents {headings} />}
      </div>
    </aside>
  </div>

  {disqusEnabled && <Disqus />}
</BlogPost>
